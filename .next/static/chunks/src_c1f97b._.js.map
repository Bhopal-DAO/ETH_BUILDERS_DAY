{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/PRAKHAR%20SHARMA/Downloads/onchain-portfolio-main/src/context/ThemeContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, useEffect } from 'react'\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\"\n\nconst ThemeContext = createContext<{\n  theme: string;\n  toggleTheme: () => void;\n}>({\n  theme: 'dark',\n  toggleTheme: () => {},\n})\n\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\n  const [theme, setTheme] = useState('dark')\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'dark' ? 'light' : 'dark')\n  }\n\n  useEffect(() => {\n    document.documentElement.classList.toggle('dark', theme === 'dark')\n  }, [theme])\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <NextThemesProvider attribute=\"class\" defaultTheme=\"dark\" enableSystem>\n        {children}\n      </NextThemesProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport const useTheme = () => useContext(ThemeContext)\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAG9B;IACD,OAAO;IACP,aAAa,KAAO;AACtB;AAEO,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAiC;;IACvE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,cAAc;QAClB,SAAS,CAAA,YAAa,cAAc,SAAS,UAAU;IACzD;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,UAAU;QAC9D;kCAAG;QAAC;KAAM;IAEV,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBACjD,cAAA,6LAAC,mJAAA,CAAA,gBAAkB;YAAC,WAAU;YAAQ,cAAa;YAAO,YAAY;sBACnE;;;;;;;;;;;AAIT;GAlBa;KAAA;AAoBN,MAAM,WAAW;;IAAM,OAAA,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;AAAY;IAAxC"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/PRAKHAR%20SHARMA/Downloads/onchain-portfolio-main/src/context/RainbowKitContext.js"],"sourcesContent":["\"use client\";\n// react imports\nimport React, { createContext } from \"react\";\n\n// rainbowkit imports\nimport \"@rainbow-me/rainbowkit/styles.css\";\n\nimport { getDefaultConfig, RainbowKitProvider } from \"@rainbow-me/rainbowkit\";\nimport { WagmiProvider } from \"wagmi\";\nimport { sepolia } from \"wagmi/chains\";\nimport { QueryClientProvider, QueryClient } from \"@tanstack/react-query\";\n\nconst config = getDefaultConfig({\n  appName: \"My RainbowKit App\",\n  projectId: \"9b4a97010a2d03a05e71209f233ab457\",\n  chains: [sepolia],\n  ssr: true, // If your dApp uses server side rendering (SSR)\n});\n\n//create context\n\nexport const RainbowKitContext = createContext();\n\n//create provider\nconst queryClient = new QueryClient();\n\nexport const RainbowProvider = ({ children }) => {\n  return (\n    <RainbowKitContext.Provider value={config}>\n      <WagmiProvider config={config}>\n        <QueryClientProvider client={queryClient}>\n          <RainbowKitProvider>{children}</RainbowKitProvider>\n        </QueryClientProvider>\n      </WagmiProvider>\n    </RainbowKitContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AACA,gBAAgB;AAChB;AAKA;AAEA;AACA;AAFA;AAEA;AAVA;;;;;;;;AAYA,MAAM,SAAS,CAAA,GAAA,iLAAA,CAAA,mBAAgB,AAAD,EAAE;IAC9B,SAAS;IACT,WAAW;IACX,QAAQ;QAAC,mKAAA,CAAA,UAAO;KAAC;IACjB,KAAK;AACP;AAIO,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;AAE7C,iBAAiB;AACjB,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW;AAE5B,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAAE;IAC1C,qBACE,6LAAC,kBAAkB,QAAQ;QAAC,OAAO;kBACjC,cAAA,6LAAC,kJAAA,CAAA,gBAAa;YAAC,QAAQ;sBACrB,cAAA,6LAAC,yLAAA,CAAA,sBAAmB;gBAAC,QAAQ;0BAC3B,cAAA,6LAAC,iLAAA,CAAA,qBAAkB;8BAAE;;;;;;;;;;;;;;;;;;;;;AAK/B;KAVa"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}